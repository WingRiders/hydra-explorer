defmodule HydraExplorer.ProtocolParams do
  use Agent

  def start_link(opts) do
    dry? = Keyword.get(opts, :dry?)

    if dry? do
      Agent.start_link(fn -> %{protocol_params: fetch_dry()} end, [name: __MODULE__] ++ opts)
    else
      url = Keyword.get(opts, :url)
      Agent.start_link(fn -> %{protocol_params: fetch(url)} end, [name: __MODULE__] ++ opts)
    end
  end

  def get() do
    Agent.get(__MODULE__, fn state -> state.protocol_params end)
  end

  defp fetch_dry() do
    %{
      "collateral_percentage" => 150,
      "cost_models" => %{
        "plutus_v1" => [
          100_788,
          420,
          1,
          1,
          1000,
          173,
          0,
          1,
          1000,
          59957,
          4,
          1,
          11183,
          32,
          201_305,
          8356,
          4,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          100,
          100,
          16000,
          100,
          94375,
          32,
          132_994,
          32,
          61462,
          4,
          72010,
          178,
          0,
          1,
          22151,
          32,
          91189,
          769,
          4,
          2,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          1000,
          42921,
          4,
          2,
          24548,
          29498,
          38,
          1,
          898_148,
          27279,
          1,
          51775,
          558,
          1,
          39184,
          1000,
          60594,
          1,
          141_895,
          32,
          83150,
          32,
          15299,
          32,
          76049,
          1,
          13169,
          4,
          22100,
          10,
          28999,
          74,
          1,
          28999,
          74,
          1,
          43285,
          552,
          1,
          44749,
          541,
          1,
          33852,
          32,
          68246,
          32,
          72362,
          32,
          7243,
          32,
          7391,
          32,
          11546,
          32,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          90434,
          519,
          0,
          1,
          74433,
          32,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          270_652,
          22588,
          4,
          1_457_325,
          64566,
          4,
          20467,
          1,
          4,
          0,
          141_992,
          32,
          100_788,
          420,
          1,
          1,
          81663,
          32,
          59498,
          32,
          20142,
          32,
          24588,
          32,
          20744,
          32,
          25933,
          32,
          24623,
          32,
          53_384_111,
          14333,
          10
        ],
        "plutus_v2" => [
          100_788,
          420,
          1,
          1,
          1000,
          173,
          0,
          1,
          1000,
          59957,
          4,
          1,
          11183,
          32,
          201_305,
          8356,
          4,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          100,
          100,
          16000,
          100,
          94375,
          32,
          132_994,
          32,
          61462,
          4,
          72010,
          178,
          0,
          1,
          22151,
          32,
          91189,
          769,
          4,
          2,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          1000,
          42921,
          4,
          2,
          24548,
          29498,
          38,
          1,
          898_148,
          27279,
          1,
          51775,
          558,
          1,
          39184,
          1000,
          60594,
          1,
          141_895,
          32,
          83150,
          32,
          15299,
          32,
          76049,
          1,
          13169,
          4,
          22100,
          10,
          28999,
          74,
          1,
          28999,
          74,
          1,
          43285,
          552,
          1,
          44749,
          541,
          1,
          33852,
          32,
          68246,
          32,
          72362,
          32,
          7243,
          32,
          7391,
          32,
          11546,
          32,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          90434,
          519,
          0,
          1,
          74433,
          32,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          85848,
          228_465,
          122,
          0,
          1,
          1,
          955_506,
          213_312,
          0,
          2,
          270_652,
          22588,
          4,
          1_457_325,
          64566,
          4,
          20467,
          1,
          4,
          0,
          141_992,
          32,
          100_788,
          420,
          1,
          1,
          81663,
          32,
          59498,
          32,
          20142,
          32,
          24588,
          32,
          20744,
          32,
          25933,
          32,
          24623,
          32,
          43_053_543,
          10,
          53_384_111,
          14333,
          10,
          43_574_283,
          26308,
          10
        ],
        "plutus_v3" => [
          100_788,
          420,
          1,
          1,
          1000,
          173,
          0,
          1,
          1000,
          59957,
          4,
          1,
          11183,
          32,
          201_305,
          8356,
          4,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          16000,
          100,
          100,
          100,
          16000,
          100,
          94375,
          32,
          132_994,
          32,
          61462,
          4,
          72010,
          178,
          0,
          1,
          22151,
          32,
          91189,
          769,
          4,
          2,
          85848,
          123_203,
          7305,
          -900,
          1716,
          549,
          57,
          85848,
          0,
          1,
          1,
          1000,
          42921,
          4,
          2,
          24548,
          29498,
          38,
          1,
          898_148,
          27279,
          1,
          51775,
          558,
          1,
          39184,
          1000,
          60594,
          1,
          141_895,
          32,
          83150,
          32,
          15299,
          32,
          76049,
          1,
          13169,
          4,
          22100,
          10,
          28999,
          74,
          1,
          28999,
          74,
          1,
          43285,
          552,
          1,
          44749,
          541,
          1,
          33852,
          32,
          68246,
          32,
          72362,
          32,
          7243,
          32,
          7391,
          32,
          11546,
          32,
          85848,
          123_203,
          7305,
          -900,
          1716,
          549,
          57,
          85848,
          0,
          1,
          90434,
          519,
          0,
          1,
          74433,
          32,
          85848,
          123_203,
          7305,
          -900,
          1716,
          549,
          57,
          85848,
          0,
          1,
          1,
          85848,
          123_203,
          7305,
          -900,
          1716,
          549,
          57,
          85848,
          0,
          1,
          955_506,
          213_312,
          0,
          2,
          270_652,
          22588,
          4,
          1_457_325,
          64566,
          4,
          20467,
          1,
          4,
          0,
          141_992,
          32,
          100_788,
          420,
          1,
          1,
          81663,
          32,
          59498,
          32,
          20142,
          32,
          24588,
          32,
          20744,
          32,
          25933,
          32,
          24623,
          32,
          43_053_543,
          10,
          53_384_111,
          14333,
          10,
          43_574_283,
          26308,
          10,
          16000,
          100,
          16000,
          100,
          962_335,
          18,
          2_780_678,
          6,
          442_008,
          1,
          52_538_055,
          3756,
          18,
          267_929,
          18,
          76_433_006,
          8868,
          18,
          52_948_122,
          18,
          1_995_836,
          36,
          3_227_919,
          12,
          901_022,
          1,
          166_917_843,
          4307,
          36,
          284_546,
          36,
          158_221_314,
          26549,
          36,
          74_698_472,
          36,
          333_849_714,
          1,
          254_006_273,
          72,
          2_174_038,
          72,
          2_261_318,
          64571,
          4,
          207_616,
          8310,
          4,
          1_293_828,
          28716,
          63,
          0,
          1,
          1_006_041,
          43623,
          251,
          0,
          1
        ]
      },
      "execution_unit_prices" => %{"price_memory" => 0, "price_steps" => 0},
      "max_block_body_size" => 90112,
      "max_block_execution_units" => %{
        "memory" => 62_000_000,
        "steps" => 20_000_000_000
      },
      "max_block_header_size" => 1100,
      "max_collateral_inputs" => 3,
      "max_tx_execution_units" => %{"memory" => 14_000_000, "steps" => 10_000_000_000},
      "max_tx_size" => 16384,
      "max_value_size" => 5000,
      "min_pool_cost" => 170_000_000,
      "monetary_expansion" => 0.003,
      "pool_pledge_influence" => 0.3,
      "pool_retire_max_epoch" => 18,
      "protocol_version" => %{"major" => 9, "minor" => 0},
      "stake_address_deposit" => 2_000_000,
      "stake_pool_deposit" => 500_000_000,
      "stake_pool_target_num" => 500,
      "treasury_cut" => 0.2,
      "tx_fee_fixed" => 0,
      "tx_fee_per_byte" => 0,
      "utxo_cost_per_byte" => 4310
    }
  end

  defp fetch(url) when is_binary(url) do
    Finch.build(:get, url <> "/protocol-parameters")
    |> Finch.request(HydraExplorer.Finch)
    |> case do
      {:ok, response} when response.status == 200 ->
        response.body |> Jason.decode!() |> Recase.Enumerable.convert_keys(&Recase.to_snake/1)

      err ->
        err
    end
  end
end
